version: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.2
    ports:
      - 9200:9200
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
    volumes:
    - ./elasticsearch/data:/usr/share/elasticsearch/data
    networks:
      - esnet

  kibana:
    image: docker.elastic.co/kibana/kibana:8.18.2
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
       - 5601:5601
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
    networks:
      - esnet
  apm-server:
    image: docker.elastic.co/apm/apm-server:8.18.2
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
  logstash:
    image: docker.elastic.co/logstash/logstash:8.18.2
    volumes:
      - ./pipeline/example-logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - 5044:5044
    environment:
      - LS_JAVA_OPTS=-Xms1g -Xmx1g
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - esnet
  metricbeat:
    image: docker.elastic.co/beats/metricbeat:8.18.2
    user: root
    hostname: "test-server"
    volumes:
        - /proc:/hostfs/proc:ro
        - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
        - /:/hostfs:ro
        - /var/run/docker.sock:/var/run/docker.sock
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
    environment:
        - ELASTICSEARCH_HOST=elasticsearch:9200
        - KIBANA_HOST=kibana:5601
        - LOGSTASH_HOSTS=logstash:5044
    command: ["metricbeat", "-e", "--strict.perms=false", "--system.hostfs=/hostfs", "run"]
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - esnet
  filebeat:
    container_name: filebeat
    image: elastic/filebeat:8.18.2
    # hostname: "test-server"
    # build: filebeat/
    user: root
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    command: ["filebeat", "-e", "--strict.perms=false"]
    volumes:
      - "./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/var/log:/var/log:ro"
      - "/run/log/journal:/run/log/journal:ro"
      - "/run/systemd:/run/systemd:ro"
      - "/etc/machine-id:/etc/machine-id:ro"
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - esnet
networks:
  esnet: